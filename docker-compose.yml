version: '3.8'
name: piko
services:
  # Bot service
  bot:
    build:
      context: ./apps/bot
      dockerfile: DockerFile
    container_name: bot
    ports:
      - "3001:3000" # Mapping to port 3001 on host
    depends_on:
      - postgres
      - redis
      - rabbitmq
    env_file:
      - ./envs/bot.env

  # API service
  api:
    build:
      context: ./apps/api
      dockerfile: DockerFile
    container_name: api
    ports:
      - "3002:3000" # Mapping to port 3002 on host
    depends_on:
      - postgres
      - redis
      - rabbitmq
    env_file:
      - ./envs/api.env

  # Worker service
  worker:
    build:
      context: ./apps/worker
      dockerfile: DockerFile
    container_name: worker
    ports:
      - "3003:3000" # Mapping to port 3004 on host
    depends_on:
      - postgres
      - redis
      - rabbitmq
    env_file:
      - ./envs/worker.env

  # Web (Next.js) service
  web:
    build:
      context: ./apps/web
      dockerfile: DockerFile
    container_name: web
    ports:
      - "3004:3000" # Mapping to port 3003 on host
    depends_on:
      - api
    environment:
      - NODE_ENV=production

  # PostgreSQL service
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ./envs/pg.env

  # Redis service
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  # RabbitMQ service
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "15672:15672"  # RabbitMQ Management UI
      - "5672:5672"    # RabbitMQ AMQP port

  # PGAdmin service
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    env_file:
      - ./envs/pgadmin.env

  # Sentry service (optional, you can configure Sentry if required)
  sentry:
    image: sentry:latest
    container_name: sentry
    ports:
      - "9000:9000"
    env_file:
      - ./envs/sentry.env

  # ClickHouse service
  clickhouse:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    env_file:
      - ./envs/clickhouse.env

volumes:
  postgres-data:
  redis-data:

networks:
  default:
    driver: bridge
